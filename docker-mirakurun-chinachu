#!/bin/bash 

### BEGIN INIT INFO
# Provides:          docker-mirakurun-chinachu
# Required-Start:    docker
# Required-Stop:     docker
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: start and stop docker-mirakurun-chinachu
# Description:       All in one Mirakurun & Chinachu
### END INIT INFO

# Source function library.
. /etc/rc.d/init.d/functions

prog="docker-mirakurun-chinachu"
pidfile="/var/run/$prog.pid"
lockfile="/var/lock/subsys/$prog"

start() {
    check_for_cleanup

    if ! [ -f $pidfile ]; then
        printf "Starting $prog:\t"
	/usr/local/bin/docker-compose -f /usr/local/projects/tvs/docker-compose.yml -p tvs up -d
        touch $lockfile
        tries=0
	not_launched=1
        while [ $not_launched -gt 0 -a $tries -lt 10 ]; do
            pid=`pgrep Mirakurun`
            not_launched=$?
            sleep 1
            tries=$((tries + 1))
        done
	if [ ! -z "$pid" ]; then
	    echo $pid > $pidfile
            success
        else
            failure
        fi
        echo
    else
        failure
        echo
        printf "$pidfile still exists...\n"
        exit 7
    fi
}

stop() {
    echo -n $"Stopping $prog: "
    /usr/local/bin/docker-compose -f /usr/local/projects/tvs/docker-compose.yml stop
    retval=$?
    echo
    [ $retval -eq 0 ] && rm -f $pidfile $lockfile 
    return $retval
}

restart() {
    stop
    start
}

reload() {
    restart
}

force_reload() {
    restart
}

rh_status() {
    status -p $pidfile $prog
}

rh_status_q() {
    rh_status >/dev/null 2>&1
}


check_for_cleanup() {
    if [ -f ${pidfile} ]; then
        /bin/ps -fp $(cat ${pidfile}) > /dev/null || rm ${pidfile}
    fi
}

case "$1" in
    start)
        rh_status_q && exit 0
        $1
        ;;
    stop)
        rh_status_q || exit 0
        $1
        ;;
    restart)
        $1
        ;;
    reload)
        rh_status_q || exit 7
        $1
        ;;
    force-reload)
        force_reload
        ;;
    status)
        rh_status
        ;;
    condrestart|try-restart)
        rh_status_q || exit 0
        restart
        ;;
    *)
        echo $"Usage: $0 {start|stop|status|restart|condrestart|try-restart|reload|force-reload}"
        exit 2
esac

exit $?
